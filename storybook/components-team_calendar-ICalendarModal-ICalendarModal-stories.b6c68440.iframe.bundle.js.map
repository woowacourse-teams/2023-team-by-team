{"version":3,"file":"components-team_calendar-ICalendarModal-ICalendarModal-stories.b6c68440.iframe.bundle.js","mappings":";AAaA;AACA;AAGA;AACA;AACA;AACA;AAGA;;AAEA;AAIA;;;;;AAOA;AAEA;;;AAIA;;AAIA;;;;;;;;;;;;AAeA;;AAGA;;AC1DA;;AAIA;AAIA;AAEA;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;ACkCA;AACA;;;AAGA;;;;;;;;;ACxCA;;;;AAOA;;;;AASA;;;AAAA;;AAQA;;;;AAQA;;;;;;;;;;;AAYA;AAGA;;;;;;;;AAUA;;;;;AAOA;;;;;;;;;;;;AAYA;;AAEA;;;;;AAOA;;;;;AAKA;;;;AAMA;;;;;;;;;;;;;;;;AAkBA;;AAIA;;;;;;;;;;AAYA;;;;;;;;;AASA;;AAIA;AACA","sources":["webpack://frontend/./src/components/common/Button/Button.styled.ts","webpack://frontend/./src/components/common/Spacing/Spacing.styled.ts","webpack://frontend/./src/components/common/Text/Text.styled.ts","webpack://frontend/./src/components/team_calendar/ICalendarModal/ICalendarModal.styled.ts"],"sourcesContent":["import { styled, css } from 'styled-components';\r\nimport type { CSSProp } from 'styled-components';\r\nimport type { ButtonVariant, ButtonProps } from './Button';\r\nimport type { ButtonSize } from '~/types/size';\r\n\r\nconst paddingSize: Record<ButtonSize, string> = {\r\n  sm: '6px',\r\n  md: '12px',\r\n  lg: '18px',\r\n};\r\n\r\nconst variants: Record<ButtonVariant, CSSProp> = {\r\n  primary: css`\r\n    background-color: ${({ theme }) => theme.color.PRIMARY};\r\n    color: ${({ theme }) => theme.color.WHITE};\r\n  `,\r\n\r\n  normal: css`\r\n    background-color: ${({ theme }) => theme.color.WHITE};\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n    border: 1px solid ${({ theme }) => theme.color.GRAY300};\r\n  `,\r\n\r\n  plain: css`\r\n    background-color: transparent;\r\n    color: ${({ theme }) => theme.color.GRAY900};\r\n  `,\r\n};\r\n\r\nexport const ButtonWrapper = styled.button.withConfig({\r\n  shouldForwardProp: (prop) => !['css', 'variant', 'size'].includes(prop),\r\n})<ButtonProps>`\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  text-align: center;\r\n\r\n  ${({ size = 'md' }) => {\r\n    return css`\r\n      padding: ${paddingSize[size]};\r\n    `;\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    return variants[variant];\r\n  }};\r\n\r\n  ${({ variant = 'primary' }) => {\r\n    if (variant !== 'plain') {\r\n      return css`\r\n        &:disabled {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        &:not([disabled]):hover {\r\n          opacity: 0.8;\r\n        }\r\n\r\n        border-radius: 4px;\r\n\r\n        transition: 0.2s;\r\n      `;\r\n    }\r\n  }};\r\n\r\n  ${(props) => props.css}\r\n`;\r\n","import styled, { css } from 'styled-components';\nimport type { SpacingProps } from '~/components/common/Spacing/Spacing';\n\nexport const SpacingRoot = styled.div.withConfig({\n  shouldForwardProp: (prop) => !['size', 'direction'].includes(prop),\n})<SpacingProps>`\n  ${({ direction, size }) => {\n    if (direction === 'vertical') {\n      return css`\n        width: 1px;\n        height: ${size}px;\n      `;\n    }\n\n    if (direction === 'horizontal') {\n      return css`\n        width: ${size}px;\n        height: 1px;\n      `;\n    }\n  }}\n`;\n","import { styled } from 'styled-components';\nimport type { TextSize } from '~/types/size';\nimport type { TextProps, Weight } from './Text';\n\nconst fontWeight: Record<Weight, number> = {\n  light: 100,\n  normal: 400,\n  semiBold: 600,\n  bold: 800,\n};\n\nconst fontSize: Record<TextSize, string> = {\n  xxs: '10px',\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  xxl: '22px',\n};\n\nexport const TextWrapper = styled.p.withConfig({\n  shouldForwardProp: (prop) => !['size', 'weight', 'css'].includes(prop),\n})<TextProps>`\n  h1&,\n  h2&,\n  h3&,\n  h4&,\n  h5&,\n  h6& {\n    font-weight: bold;\n  }\n  h1& {\n    font-size: 36px;\n  }\n  h2& {\n    font-size: 32px;\n  }\n  h3& {\n    font-size: 28px;\n  }\n  h4& {\n    font-size: 24px;\n  }\n  p&,\n  span&,\n  strong&,\n  small& {\n    font-size: ${({ size = 'md' }) => fontSize[size] || 'initial'};\n    font-weight: ${({ weight = 'normal' }) => fontWeight[weight] || 'initial'};\n  }\n  && {\n    ${(props) => props.css}\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport type { CalendarSize } from '~/types/size';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Container = styled.div<{\n  $calendarSize: CalendarSize;\n  $isMobile: boolean;\n}>`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  ${({ $calendarSize, $isMobile }) => {\n    if ($calendarSize === 'md' || $isMobile) {\n      return css`\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      `;\n    }\n\n    if ($calendarSize === 'sm') {\n      return css`\n        top: 25%;\n        left: 14.4%;\n      `;\n    }\n  }}\n\n  ${({ $isMobile }) => {\n    if ($isMobile)\n      return css`\n        width: 300px;\n        height: 180px;\n        padding: 10px 20px;\n      `;\n\n    return css`\n      width: 360px;\n      height: 190px;\n      padding: 16px;\n    `;\n  }}\n \n  border-radius: 8px;\n  box-shadow:\n    0 0 1px #1b1d1f33,\n    0 15px 25px #1b1d1f33,\n    0 5px 10px #1b1d1f1f;\n  background-color: ${({ theme }) => theme.color.WHITE};\n`;\n\nexport const Header = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  & > button {\n    margin-left: auto;\n  }\n`;\n\nexport const TooltipWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  cursor: help;\n`;\n\nexport const Tooltip = styled.div`\n  position: absolute;\n  top: 30px;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 320px;\n  height: 100px;\n  padding: 10px 20px;\n\n  border: 1px solid ${({ theme }) => theme.color.GRAY300};\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.color.WHITE};\n\n  & > p {\n    line-height: 1.3;\n  }\n`;\n\nexport const UrlContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border: 1px solid ${({ theme }) => theme.color.GRAY300};\n  border-radius: 8px;\n\n  margin: 10px 0 20px 0;\n`;\n\nexport const UrlWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 90%;\n  height: 36px;\n  padding: 0 8px;\n\n  & > div {\n    width: 100%;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const UserGuideLink = styled.a`\n  align-self: flex-start;\n`;\n\nexport const closeButton = css`\n  width: 28px;\n  height: 28px;\n  padding: 0;\n  margin-bottom: 4px;\n\n  svg {\n    width: 28px;\n    height: 28px;\n  }\n`;\n\nexport const copyButton = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 32px;\n  height: 40px;\n  padding: 0;\n\n  background-color: ${({ theme }) => theme.color.GRAY100};\n  border-radius: 0 8px 8px 0;\n`;\n\nexport const shortcutText = css`\n  color: ${({ theme }) => theme.color.GRAY800};\n`;\n"],"names":[],"sourceRoot":""}